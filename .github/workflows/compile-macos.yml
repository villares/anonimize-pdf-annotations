# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build anonymize-pdf-annotations - GUI for MacOS

on:
  workflow_dispatch:
  push:
    tags:
      - "*.*.*"

    # Don't trigger if it's just a documentation update
    paths-ignore:
      - '**.md'
      - '**.MD'
      - '**.yml'
      - '**.sh'
      - '**.bat'
      - 'tests/**'
      - 'doc/**'
      - '.vscode/*'
      - 'Dockerfile'
      - 'LICENSE'
      - '.gitattributes'
      - '.gitignore'
      - '.dockerignore'
      - 'spec.json'
      - 'files.txt'

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install the Apple certificate and provisioning profile
      #        TODO signing
      #        https://federicoterzi.com/blog/automatic-code-signing-and-notarization-for-macos-apps-using-github-actions/
        if: ${{ false }}
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
          
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel pyinstaller certifi pillow
          pip install -r requirements.txt
      - name: build binary
        run: |
          python setup.py build_binary
      - name: Print files
        run: |
          ls -a dist/
      - name: setup permissions
        run: |
          chmod +x dist/remove_name_from_annotations_gui.app
      - name: Zip folder
        run: |
          cd dist/
          zip -r remove_name_from_annotations_gui_osx.zip remove_name_from_annotations_gui.app
          cd ..
      - name: upload build
        uses: actions/upload-artifact@v3
        with:
          name: osx zipped
          path: './dist/remove_name_from_annotations_gui_osx.zip'
      - name: Print files
        run: |
          ls -a dist/
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          generate_release_notes: true
          files: |
            dist/remove_name_from_annotations_gui_osx.zip